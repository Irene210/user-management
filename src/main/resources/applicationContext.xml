<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd"
       default-lazy-init="true">

    <description>Spring公共配置</description>

    <context:property-placeholder properties-ref="propertyConfigurer" />
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
	   <property name="locations">  
	   	<list>
	    	<value>classpath:profile/development/application.properties</value>
        </list>
	   </property>  
	</bean>  
    
    <!-- 数据源配置,使用应用内的DBCP数据库连接池 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="defaultAutoCommit" value="false" />
        <property name="initialSize" value="${jdbc.pool.initialSize}" />
        <property name="maxActive" value="${jdbc.pool.maxActive}" />
        <property name="minIdle" value="${jdbc.pool.minIdle}" />
        <property name="maxIdle" value="${jdbc.pool.maxIdle}" />

        <!-- 支队开发环境下数据库连接1分钟超时断开，使用以下配置自动关闭空闲连接-->
        
        <property name="removeAbandonedTimeout" value="60" />
        <property name="removeAbandoned" value="true" />
        <property name= "testWhileIdle" value="true" />
        <property name= "validationQuery" value="select 1 from dual" />
        <property name= "timeBetweenEvictionRunsMillis" value="30000" />
        <property name= "numTestsPerEvictionRun" value="${jdbc.pool.maxActive}" />
        <property name="minEvictableIdleTimeMillis" value="60000" />

    </bean>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="get*" read-only="true"/>
            <tx:method name="select*" read-only="true"/>
            <tx:method name="*"/>
         </tx:attributes>
      </tx:advice>
  
    <aop:config>
        <aop:pointcut id="servicePointcut" expression="execution(* com.hisense.hiutbd.platform.*.service.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="servicePointcut"/>
    </aop:config>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:/mybatis-Configuration.xml" />
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hisense.hiutbd.platform.base.persistence"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="${redis.pool.maxActive}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="maxWait" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
       <property name="hostName" value="${redis.hostname}"/>
       <property name="port" value="${redis.port}"/>
       <property name="database" value="${redis.database}"/>
       <property name="password" value="${redis.password}"/><!-- alibaba专用 -->
       <property name="usePool" value="true"/>
       <property name="poolConfig" ref="jedisPoolConfig" />
    </bean>
    
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
       <property name="connectionFactory" ref="jedisConnectionFactory"/>
       <property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
        <property name="hashKeySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="hashValueSerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
    </bean>

    <bean id="asyncRestTemplate" class="org.springframework.web.client.AsyncRestTemplate">
    </bean>
    
    <context:component-scan base-package="com.hisense.hiutbd.platform">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <bean id="mapper" class="org.dozer.DozerBeanMapper"></bean>

</beans>